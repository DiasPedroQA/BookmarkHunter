# .github/workflows/test.yml

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}

    steps:
    # 1. Checkout do código
    # Esta ação baixa o código do repositório para o ambiente do GitHub Actions.
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configuração do Python
    # Esta ação configura a versão do Python necessária para o projeto.
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    # 3. Instalação das dependências
    # Cria um ambiente virtual, ativa-o, e instala as dependências listadas no arquivo requirements.txt.
    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    # 4. Execução dos testes
    # Roda os testes usando pytest, com cobertura de código gerada em vários formatos.
    - name: Run tests with pytest
      run: |
        source .venv/bin/activate
        pytest tests/backend/ --cov=app --cov-report=term --cov-report=html --cov-report=xml

    # 5. Upload dos relatórios de cobertura
    # Envia os relatórios gerados de cobertura de código como artefatos para o GitHub Actions.
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          htmlcov/
          coverage.xml
