name: Python Package using venv

on:
  push:
    branches:
      - main # Ou o nome da branch principal do seu projeto
  pull_request:
    branches:
      - main # Ou o nome da branch principal do seu projeto

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - uses: actions/checkout@v4

      # Configuração do Python 3.10
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Cache das dependências para acelerar a instalação
      - name: Cache pip dependencies
        id: pip-cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      # Criando e ativando o ambiente virtual
      - name: Set up venv
        run: |
          python -m venv venv
          source venv/bin/activate

      # Instalando as dependências
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Linting com flake8
      - name: Lint with flake8
        run: |
          source venv/bin/activate
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Testes com pytest
      - name: Test with pytest
        run: |
          source venv/bin/activate
          pip install pytest
          pytest

      # Geração de relatório de cobertura de testes (opcional)
      - name: Generate coverage report
        run: |
          source venv/bin/activate
          pip install pytest-cov
          pytest --cov=your_package_name --cov-report=xml

      # Upload do relatório de cobertura para Codecov (opcional)
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      # Limpeza do ambiente virtual (opcional)
      - name: Clean up venv
        run: |
          rm -rf venv
